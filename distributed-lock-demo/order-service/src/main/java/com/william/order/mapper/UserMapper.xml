<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.william.order.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.william.api.model.User" >
    <id column="userId" property="userId" jdbcType="INTEGER" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="passWord" property="passWord" jdbcType="VARCHAR" />
    <result column="nickName" property="nickName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, userName, passWord, nickName, phone, email, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from d_user
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from d_user
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.william.order.mapper.User" >
    insert into d_user (userId, userName, passWord, 
      nickName, phone, email, 
      createTime)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.william.order.mapper.User" >
    insert into d_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="passWord != null" >
        passWord,
      </if>
      <if test="nickName != null" >
        nickName,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.william.order.mapper.User" >
    update d_user
    <set >
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        passWord = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nickName = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.william.order.mapper.User" >
    update d_user
    set userName = #{userName,jdbcType=VARCHAR},
      passWord = #{passWord,jdbcType=VARCHAR},
      nickName = #{nickName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
</mapper>